@if (TempData["ViewSiteBasic"] == "true")
{
Layout = null;
}
<script>

     var loadix = false;
    setInterval(function()
    {
        if (loadix == true) return;

         var formData = new FormData();
              formData.append("website", window.location.pathname);  formData.append("method", '@TempData["html_method_root"]');
        
         $.ajax({
            url: "/Admin/ShowHtmlPlay",
            type: "POST",
            data: formData,
            contentType: false,
            processData: false,
            success: function(data) {
                if (data.result == true)
                {
                    document.getElementById("html_play").innerHTML = data.html;

                     const container = document.getElementById("html_play");
                      const scripts = container.querySelectorAll("script");

                      scripts.forEach((script) => {
                        const newScript = document.createElement("script");
                        if (script.src) {
                          // Nếu script có src (external script), sao chép thuộc tính src
                          newScript.src = script.src;
                        } else {
                          // Nếu script nội tuyến, sao chép nội dung
                          newScript.textContent = script.textContent;
                        }
                        document.body.appendChild(newScript);
                        script.remove();
                     });

                    loadix = true;
                }
                 else
                {
                     document.getElementById("html_play").style.display = "none"; loadix = true;
                }
            }
         });
    }, 100);

</script>
<div id="html_play"></div>
<h4>
ViewData["_TÊN_"]
<br>
ViewBag._TÊN_
<br>
<br>
TempData["_TÊN""]
<br>
<br>
*******************************************************************************************
<br>
<br>
# Ví dụ về Partial View giỏ hàng :
<br>
<br>
- Tạo folder ... và class Extension mở rộng như sau :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
public static class HtmlHelperViewExtensions
<br>
{
<br>
public static IHtmlContent Action(this IHtmlHelper helper, string action, object parameters = null)
<br>
{
<br>
var controller = (string)helper.ViewContext.RouteData.Values["controller"];
<br>
return Action(helper, action, controller, parameters);
<br>
}
<br>
<br>
public static IHtmlContent Action(this IHtmlHelper helper, string action, string controller, object parameters = null)
<br>
{
<br>
var area = (string)helper.ViewContext.RouteData.Values["area"];
<br>
return Action(helper, action, controller, area, parameters);
<br>
}
<br>
<br>
public static IHtmlContent Action(this IHtmlHelper helper, string action, string controller, string area, object parameters = null)
<br>
{
<br>
if (action == null)
<br>
throw new ArgumentNullException(nameof(controller));
<br>
if (controller == null)
<br>
throw new ArgumentNullException(nameof(action));
<br>
<br>
var task = ActionAsync(helper, action, controller, area, parameters);
<br>
return task.Result;
<br>
}
<br>
<br>
private static async Task&lt;IHtmlContent&gt; ActionAsync(this IHtmlHelper helper, string action, string controller, string area, object parameters = null)
<br>
{
<br>
&#47;&#47; fetching required services for invocation
<br>
var currentHttpContext = helper.ViewContext.HttpContext;
<br>
var httpContextFactory = GetServiceOrFail&lt;IHttpContextFactory&gt;(currentHttpContext);
<br>
var actionInvokerFactory = GetServiceOrFail&lt;IActionInvokerFactory&gt;(currentHttpContext);
<br>
var actionSelector = GetServiceOrFail&lt;IActionDescriptorCollectionProvider&gt;(currentHttpContext);
<br>
<br>
&#47;&#47; creating new action invocation context
<br>
var routeData = new RouteData();
<br>
var routeParams = new RouteValueDictionary(parameters ?? new { });
<br>
var routeValues = new RouteValueDictionary(new { area, controller, action });
<br>
var newHttpContext = httpContextFactory.Create(currentHttpContext.Features);
<br>
<br>
newHttpContext.Response.Body = new MemoryStream();
<br>
<br>
foreach (var router in helper.ViewContext.RouteData.Routers)
<br>
routeData.PushState(router, null, null);
<br>
<br>
routeData.PushState(null, routeValues, null);
<br>
routeData.PushState(null, routeParams, null);
<br>
<br>
var actionDescriptor = actionSelector.ActionDescriptors.Items.First(i =&gt; i.RouteValues["Controller"] == controller && i.RouteValues["Action"] == action);
<br>
var actionContext = new ActionContext(newHttpContext, routeData, actionDescriptor);
<br>
<br>
&#47;&#47; invoke action and retreive the response body
<br>
var invoker = actionInvokerFactory.CreateInvoker(actionContext);
<br>
string content = null;
<br>
<br>
await invoker.InvokeAsync().ContinueWith(task =&gt;
<br>
{
<br>
if (task.IsFaulted)
<br>
{
<br>
content = task.Exception.Message;
<br>
}
<br>
else if (task.IsCompleted)
<br>
{
<br>
newHttpContext.Response.Body.Position = 0;
<br>
using (var reader = new StreamReader(newHttpContext.Response.Body))
<br>
content = reader.ReadToEnd();
<br>
}
<br>
});
<br>
<br>
return new HtmlString(content);
<br>
}
<br>
<br>
private static TService GetServiceOrFail&lt;TService&gt;(HttpContext httpContext)
<br>
{
<br>
if (httpContext == null)
<br>
throw new ArgumentNullException(nameof(httpContext));
<br>
<br>
var service = httpContext.RequestServices.GetService(typeof(TService));
<br>
<br>
if (service == null)
<br>
throw new InvalidOperationException($"Could not locate service: {nameof(TService)}");
<br>
<br>
return (TService)service;
<br>
}
<br>
}
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
- Tại Views Layout trong mục Shared :
<br>
<br>
&commat;using WebBanSach.Extension_Method;
<br>
<br>
&#47;&#47; Đặt ở đâu đó tuỳ bạn...
<br>
&commat;Html.Action("GiohangPartial","Giohang")
<br>
<br>
- Tại Views Giỏ hàng.cshtml :
<br>
<br>
&lt;a href="&commat;Url.Action("GioHang","Giohang")"&gt;
<br>
&lt;img src="~&#47;images&#47;Giohang.png" width="20" &#47;&gt; Giỏ hàng (&commat;ViewBag.Tongsoluong)
<br>
&lt;&#47;a&gt;
<br>
<br>
Tại GiohangPartial.cshtml ta có :
<br />
<br />
lt;br&gt;lt;a href="&commat;Url.Action("GioHang","Giohang")"&gt;lt;br&gt;    lt;img src="~/images/Giohang.png" width="20" /&gt; Giỏ hàng (&commat;ViewBag.Tongsoluong)lt;br&gt;lt;/a&gt;
<br />
<br />
- Tại controller :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
public ActionResult GiohangPartial()
<br>
{
<br>
ViewBag.Tongsoluong = TongSoLuong();
<br>
return PartialView();
<br>
}
<br>
<br>
private int TongSoLuong()
<br>
{
<br>
int iTongSoLuong = 0;
<br>
List&lt;Giohang&gt; lstGiohang = HttpContext.Session.GetObject&lt;List&lt;Giohang&gt;&gt;("Giohang");
<br>
if (lstGiohang != null)
<br>
{
<br>
iTongSoLuong = lstGiohang.Sum(n =&gt; n.iSoluong);
<br>
}
<br>
return iTongSoLuong;
<br>
}
<br>
<br>
... ... ...
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
<p style="color:green">...[TỰ TÌM HIỂU THÊM VỀ GIỎ HÀNG]...</p>
<br />
<h3 style="color:red"><a target="_blank" href="http://github.com/vanluatbui/WebBanSach_AspNetCore_MVC">Link xem project mẫu tất cả [HD]</a></h3>
<br>
<br>
# Ví dụ về Partial View có CSDL :
<br>
<br>
- Sử dụng lại class Extension đã tạo phía trên.
<br>
<br>
- Tại Views và chỗ bất kỳ (thường là Views Shared Layout??) :
<br>
<br>
&commat;using WebBanSach.Extension_Method;
<br>
<br>
...
<br>
<br>
&lt;div class="col-md-3"&gt;
<br>
<br>
&lt;p class="lead"&gt;CHỦ ĐỀ SÁCH&lt;&#47;p&gt;
<br>
&commat;Html.Action("Chude")
<br>
<br>
&lt;&#47;div&gt;
<br>
<br>
- Tại Controller :
<br>
<br>
public ActionResult Chude()
<br>
{
<br>
var chude = data.ChuDes.ToList();
<br>
return PartialView(chude);
<br>
}
<br>
<br>
Tại Chude.cshtml ta có :
<br />
<br />
&lt;div class="list-group"&gt;<br>    &commat;foreach (var chude in Model)<br>    {<br>        &lt;a href="&commat;Url.Action("Sachtheochude","BookStore", new {id = chude.MaChuDe})" class="list-group-item"&gt; &commat;chude.TenChuDe&lt;/a&gt;<br>    }<br>&lt;/div&gt;
<br />
<br />
# Mã hoá MD5 của chuỗi :
<br>
<br>
- Tạo folder ... và class như sau (chuỗi gì cũng đc - ví dụ mã hoá chuỗi là mật khẩu) :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
public static class MD5_Encrypt
<br>
{
<br>
public static string MD5_Password(string password)
<br>
{
<br>
&#47;&#47;Tạo MD5 
<br>
MD5 mh = MD5.Create();
<br>
&#47;&#47;Chuyển kiểu chuổi thành kiểu byte
<br>
byte[] inputBytes = System.Text.Encoding.ASCII.GetBytes(password);
<br>
&#47;&#47;mã hóa chuỗi đã chuyển
<br>
byte[] hash = mh.ComputeHash(inputBytes);
<br>
&#47;&#47;tạo đối tượng StringBuilder (làm việc với kiểu dữ liệu lớn)
<br>
StringBuilder sb = new StringBuilder();
<br>
<br>
for (int i = 0; i &lt; hash.Length; i++)
<br>
{
<br>
sb.Append(hash[i].ToString("x2"));
<br>
}
<br>
<br>
return sb.ToString(); &#47;&#47; Trả về chuỗi đã mã hoá
<br>
}
<br>
}
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
# Dán JavaScript hoặc CSS vào Views :
<br>
<br>
- Các file này cũng được lưu trong folder css hoặc js tại mục wwwroot.
<br>
<br>
- Tại mục View, trong code bất kỳ (thường là views Layout trong Views&#47;Shared) :
<br>
<br>
----------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
&lt;!DOCTYPE html&gt;
<br>
&lt;html lang="en"&gt;
<br>
<br>
&lt;head&gt;
<br>
<br>
&lt;meta charset="utf-8"&gt;
<br>
&lt;meta http-equiv="X-UA-Compatible" content="IE=edge"&gt;
<br>
&lt;meta name="viewport" content="width=device-width, initial-scale=1"&gt;
<br>
&lt;meta name="description" content=""&gt;
<br>
&lt;meta name="author" content=""&gt;
<br>
<br>
&lt;title&gt;_Tên Trang Web_&lt;&#47;title&gt;
<br>
<br>
&lt;!-- Link file CSS --&gt;
<br>
<br>
&lt;link href="~&#47;css&#47;_FILE CSS_" rel="stylesheet" &#47;&gt;
<br>
<br>
&lt;!-- Link web file JS --&gt;
<br>
<br>
&lt;script src="http:&#47;&#47;_WEB FILE JS_&#47;_FILE JS.js"&gt;&lt;&#47;script&gt;
<br>
<br>
&lt;&#47;head&gt;
<br>
<br>
&lt;body&gt;
<br>
<br>
...
<br>
<br>
&commat;RenderBody()
<br>
<br>
...
<br>
<br>
&lt;!-- Link file JS --&gt;
<br>
&lt;script src="~&#47;js&#47;_FILE JS_"&gt;&lt;&#47;script&gt;
<br>
<br>
&lt;&#47;body&gt;
<br>
<br>
&lt;&#47;html&gt;
<br>
<br>
------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
# SESSION :
<br>
<br>
- File Program.cs gõ thêm đoạn sau :
<br>
<br>
builder.Services.AddSession();
<br>
<br>
...
<br>
<br>
app.UseSession();
<br>
<br>
- Tạo thư mục Extensions và tạo class phương thức mở rộng như sau :
<br>
<br>
----------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
public static class SessionExtensions
<br>
{
<br>
public static void SetObject(this ISession session, string key, object value)
<br>
{
<br>
session.SetString(key, JsonConvert.SerializeObject(value));
<br>
}
<br>
<br>
public static T GetObject&lt;T&gt;(this ISession session, string key)
<br>
{
<br>
var value = session.GetString(key);
<br>
return value == null ? default(T) : JsonConvert.DeserializeObject&lt;T&gt;(value);
<br>
}
<br>
}
<br>
<br>
----------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
- Tại controller :
<br>
<br>
+ Lấy giá trị Session : HttpContext.Session.GetObject&lt;_CLASS OBJECT MODEL_&gt;("_TÊN SESSION_")
<br>
<br>
+ Gán giá trị Session : HttpContext.Session.SetObject("_TÊN SESSION_", _VALUE_);
<br>
<br>
# Upload file ảnh lên Server :
<br>
<br>
- Tại Views (ví dụ) :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
&commat;using (Html.BeginForm("_Tên Views_", "_Tên Controller_", FormMethod.Post, new { &commat;enctype = "multipart&#47;form-data" }))
<br>
<br>
{
<br>
&commat;Html.AntiForgeryToken()
<br>
<br>
&lt;hr &#47;&gt;
<br>
&commat;Html.ValidationSummary(true, "", new { &commat;class = "text-danger" })
<br>
<br>
...
<br>
<br>
&lt;div class="form-horizontal"&gt;
<br>
&lt;hr &#47;&gt;
<br>
&commat;Html.ValidationSummary(true, "", new { &commat;class = "text-danger" })
<br>
<br>
&lt;div class="form-group"&gt;
<br>
&commat;Html.LabelFor(model =&gt; model.AnhBia, htmlAttributes: new { &commat;class = "control-label col-md-2" })
<br>
&lt;div class="col-md-10"&gt;
<br>
&lt;input type="file" name="fileUpload" &#47;&gt;
<br>
&commat;ViewBag.Thongbao
<br>
&lt;&#47;div&gt;
<br>
&lt;&#47;div&gt;
<br>
<br>
...
<br>
}
<br>
<br>
...
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
- Tại controller (ví dụ) :
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
private readonly IWebHostEnvironment _webHostEnvironment;
<br>
<br>
public QuanLy_SachController(IWebHostEnvironment webHostEnvironment)
<br>
{
<br>
...
<br>
_webHostEnvironment = webHostEnvironment;
<br>
}
<br>
<br>
public ActionResult ThemmoiSach(Sach sach, IFormFile fileUpload)
<br>
{
<br>
if (HttpContext.Session.GetObject&lt;Admin&gt;("Taikhoanadmin") == null)
<br>
return RedirectToAction("Login", "Admin");
<br>
else
<br>
{
<br>
&#47;&#47; Kiểm tra đường dẫn file (nếu trống)
<br>
if (fileUpload == null || fileUpload != null && fileUpload.FileName.Length == 0)
<br>
{
<br>
ViewBag.Thongbao = "Vui lòng chọn ảnh bìa";
<br>
return View();
<br>
}
<br>
&#47;&#47;Thêm ảnh đã Upload vào Server
<br>
else
<br>
{
<br>
<br>
&#47;&#47; Lấy tên file đã Upload trên View
<br>
var fileName = Path.GetFileName(fileUpload.FileName);
<br>
<br>
&#47;&#47; Đưa file đã upload thêm vào folder images của mục wwwroot (lưu ý đây chỉ mới là link - còn ảnh chưa lưu thực sự)
<br>
var path = Path.Combine(_webHostEnvironment.WebRootPath, "iamges",  fileName);
<br>
<br>
&#47;&#47; Kiểm tra file ảnh đã tồn tại trong wwwroot&#47;images chưa?
<br>
if (System.IO.File.Exists(path))
<br>
{
<br>
ViewBag.Thongbao = "Hình ảnh đã tồn tại";
<br>
<br>
&#47;&#47; Trường hợp bạn muốn xoá file đã tồn tại trong wwwroot (không thì bỏ qua)
<br>
<br>
FileInfo f = new FileInfo(path);
<br>
f.Delete();
<br>
}
<br>
else
<br>
{
<br>
&#47;&#47; Lưu hình ảnh vào Server Project thực sự
<br>
using (Stream fileStream = new FileStream(path, FileMode.Create))
<br>
{
<br>
fileUpload.CopyTo(fileStream);
<br>
}
<br>
...    
<br>
}
<br &#47;>
<br &#47;>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br &#47;>
<p style="color:red" >Tới đây coi như cũng đã xong phần upload file lên Server rồi, tuy nhiên</p>
nếu bạn upload file có dung lượng lớn sẽ gặp phải vấn đề. Vì vậy hãy tiếp tục thực hiện các công việc sau :
<br>
<br &#47;>
Click chuột phải vào project, chọn Add - New Item - Ở mục C# và chọn sổ xuống AspNetCore sau đó chọn vào Web...
<br>
Ở phía bên phải, thanh Search bạn tìm và chọn Web Configuration File và đặt tên mặc định là web.config...
<br>
File web.config được tạo ra, ở file này bạn copy thêm hiệu chỉnh code như sau :
<br &#47;>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br &#47;>
&lt;?xml version="1.0" encoding="utf-8"?&gt;<br>&lt;configuration&gt;<br>    &lt;system.webServer&gt;<br>        &lt;security&gt;<br>            &lt;requestFiltering&gt;<br>                &lt;requestLimits maxAllowedContentLength="104857600" &#47;&gt;<br>            &lt;&#47;requestFiltering&gt;<br>        &lt;&#47;security&gt;<br>    &lt;&#47;system.webServer&gt;<br>&lt;&#47;configuration&gt;
<br&#47;>
<br&#47;>
--------------------------------------------------------------------------------------------------------------------------------------------
<br&#47;>
<br &#47;>
...
Lấy địa chỉ link hiện tại trên thanh địa chỉ của trình duyệt (nơi trang web bạn đang đứng)
<br>
<br>
string? httpReferrer = this.HttpContext.GetServerVariable("HTTP_REFERER");<br>            if (httpReferrer == null)<br>            {<br>                httpReferrer = this.HttpContext.GetServerVariable("REMOTE_HOST");<br>                if (httpReferrer == null)<br>                {<br>                    httpReferrer = this.HttpContext.GetServerVariable("REMOTE_ADDR");<br>                }<br>            }
<br>
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
# Dropdown trong Views từ CSDL :
<br>
<br>
- Tại Views (ví dụ - giá trị hiển thị trên web là tên chủ đề sách nhưng giá trị thật sự ẩn trong code là mã của chủ đề sách) :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
&commat;using (Html.BeginForm("_Tên Views_", "_Tên Controller_", FormMethod.Post, new { &commat;enctype = "multipart&#47;form-data" }))
<br>
<br>
{
<br>
&commat;Html.AntiForgeryToken()
<br>
<br>
&lt;hr &#47;&gt;
<br>
&commat;Html.ValidationSummary(true, "", new { &commat;class = "text-danger" })
<br>
<br>
...
<br>
<br>
&lt;div class="form-group"&gt;
<br>
&commat;Html.LabelFor(model =&gt; model.MaChuDe, htmlAttributes: new { &commat;class = "control-label col-md-2" })
<br>
&lt;div class="col-md-10"&gt;
<br>
&commat;Html.DropDownList("MaCD")
<br>
&lt;&#47;div&gt;
<br>
&lt;&#47;div&gt;
<br>
<br>
...
<br>
}
<br>
<br>
...
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
- Tại controller (ví dụ - giá trị hiển thị trên web là tên chủ đề sách nhưng giá trị thật sự ẩn trong code là mã chủ đề sách - tuỳ tên cột trong class CSDL) :
<br>
<br>
ViewBag.MaCD = new SelectList(dbContext.ChuDes.ToList().OrderBy(n =&gt; n.TenChuDe).ToList(), "MaChuDe", "TenChuDe");
<br>
<br>
- Tại controller, ví dụ lấy giá trị đã chọn trong Dropdown trên web :
<br>
<br>
IFormCollection f;
<br>
<br>
&#47;&#47; Lưu ý mặc dù giá trị bạn nhìn thấy và chọn Dropdown trên web là tên chủ đề nhưng code dưới đây sẽ được gán bằng mã chủ đề đó
<br>
var MaChuDe = f["MaCD"].ToString();
<br>
<br>
# Gửi Email (GMAIL) <a target="_blank" href="http://codewithmukesh.com/blog/send-emails-with-aspnet-core">Xem hướng dẫn mới (gmail có gửi kèm file tại đây)</a> và hoặc <a target="_blank" href="http://blog.christian-schou.dk/send-emails-with-asp-net-core-with-mailkit/">tại đây</a> :  
<br>
<br>
- Tạo folder ... và class như sau :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
public static class SendEmail
<br>
{
<br>
public static void SendMail2Step(string From, string To, string Subject, string Body, string password)
<br>
{
<br>
&#47;&#47; Ví dụ tài khoản Gmail của bạn đăng ký với tên Nguyễn Văn A, nhưng bạn lại sử dụng địa chỉ email này code C# để gửi tự động
<br>
&#47;&#47; email cho ai đó và họ sẽ thấy tên mới bạn đặt khi nhận thư của bạn (ví dụ Web Bán Sách) ...
<br>
var fromAddress = new MailAddress(From, "_TÊN USER EMAIL CỦA MÌNH MUỐN HIỂN THỊ_");
<br>
<br>
var toAddress = new MailAddress(To, To);
<br>
var smtp = new SmtpClient
<br>
{
<br>
Host = "smtp.gmail.com",
<br>
Port = 587,
<br>
EnableSsl = true,
<br>
DeliveryMethod = SmtpDeliveryMethod.Network,
<br>
Credentials = new NetworkCredential(From, password),
<br>
Timeout = 20000
<br>
};
<br>
using (var message = new MailMessage(fromAddress, toAddress)
<br>
{
<br>
Subject = Subject,
<br>
Body = Body
<br>
})
<br>
{
<br>
smtp.Send(message);
<br>
}
<br>
}
<br>
}
<br>
<br>
----------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
- Tại controller :
<br>
<br>
SendEmail.SendMail2Step("Địa Chỉ Email Của Bạn Cần Dùng Để Gửi EMAIL Cho Người Khác",
<br>
"ĐỊA CHỈ EMAIL CẦN NHẬN", "Tittle Của Email", "Nội Dung Email Cần Gửi", "PASSWORD SECURE");
<br>
<br>
&#47;&#47; Hướng dẫn cách lấy PASSWORD SECURE trên Gmail :
<br>
<br>
+ Trước tiên, bật xác minh 2 bước cho tài khoản Gmail mà bạn sẽ dùng để code C# gửi email.
<br>
<br>
+ Tại Google, phần tiện ích mở rộng chọn mục quản lý Tài khoản (Google Account)
<br>
<br>
+ Security -&gt; Bên kia tại phần Signing in to Google, nhấn vào App Passwords
<br>
<br>
+ Dropdown Select app (chọn Orther) -&gt; VÀ ĐẶT TÊN TUỲ Ý -&gt; Generate -&gt; Copy PASSWORD này và đưa vào code C#.
<br>
<br>
...
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
********************************************************************************************************
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
# Ví dụ Views hiển thị danh sách sản phẩm (Quản Lý Bán Sách) :
<br>
<br>
- Tại controller (ví dụ) :
<br>
<br>
public ActionResult Sach()
<br>
{
<br>
return View(data.Sachs.ToList());
<br>
}
<br>
<br>
- Tại Views (ví dụ) : 
<br>
<br>
-----------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
&commat;model List&lt;Sach&gt;
<br>
<br>
&commat;{
<br>
ViewBag.Title = "Sach";
<br>
Layout = "~&#47;Views&#47;Shared&#47;_Layout.cshtml";
<br>
}
<br>
<br>
&lt;h2&gt;QUẢN LÝ DANH MỤC SÁCH&lt;&#47;h2&gt;
<br>
<br>
&lt;p&gt;
<br>
&commat;Html.ActionLink("THÊM SÁCH MỚI", "_TÊN VIEW CỦA THÊM MỚI SÁCH_")
<br>
&lt;&#47;p&gt;
<br>
&lt;table class="table"&gt;
<br>
&lt;tr&gt;
<br>
&lt;th width="250"&gt;
<br>
TÊN SÁCH
<br>
&lt;&#47;th&gt;
<br>
<br>
&lt;th width="200"&gt;
<br>
ẢNH BÌA
<br>
&lt;&#47;th&gt;
<br>
<br>
&lt;th width="200"&gt;
<br>
NGÀY CẬP NHẬT
<br>
&lt;&#47;th&gt;
<br>
<br>
&lt;&#47;tr&gt;
<br>
<br>
&commat;foreach (var item in Model)
<br>
{
<br>
&lt;tr&gt;
<br>
&lt;td&gt;
<br>
&commat;Html.DisplayFor(modelItem =&gt; item.TenSach)
<br>
&lt;&#47;td&gt;
<br>
<br>
&lt;td&gt;
<br>
&lt;img width="200" src="~&#47;Hinhsanpham&#47;&commat;item.AnhBia" &#47;&gt;
<br>
&lt;&#47;td&gt;
<br>
<br>
&lt;td&gt;
<br>
&commat;String.Format("{0:dd&#47;MM&#47;yyyy}", item.NgayCapNhat)
<br>
&lt;&#47;td&gt;
<br>
<br>
&lt;td&gt;
<br>
&commat;Html.ActionLink("Sửa", "_TÊN VIEW CỦA SỬA SÁCH_" ,new { id = item.MaSach }) |
<br>
&commat;Html.ActionLink("Chi tiết", "_TÊN VIEW CỦA CHI TIẾT SÁCH_", new { id = item.MaSach }) |
<br>
&commat;Html.ActionLink("Xóa", "_TÊN VIEW CỦA XOÁ SÁCH_", new { id = item.MaSach })
<br>
&lt;&#47;td&gt;
<br>
&lt;&#47;tr&gt;
<br>
}
<br>
<br>
&lt;&#47;table&gt;
<br>
<br>
&lt;style&gt;
<br>
.Menutran li {
<br>
display: inline
<br>
}
<br>
&lt;&#47;style&gt;
<br>
<br>
-------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
# Ví dụ Views thêm 1 sản phẩm (Quản Lý Bán Sách) :
<br>
<br>
- Tại controller (ví dụ) :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
[HttpGet]
<br>
public ActionResult Themmoisach()
<br>
{
<br>
&#47;&#47; Nếu admin chưa đăng nhập (thông tin Login hiện chưa lưu trong Session)
<br>
if (HttpContext.Session.GetObject&lt;Admin&gt;("Taikhoanadmin") == null)
<br>
return RedirectToAction("Login", "Admin");
<br>
else
<br>
{
<br>
&#47;&#47; Khởi động lại các Dropdown trong Views :))
<br>
ViewBag.MaCD = new SelectList(data.ChuDes.ToList().OrderBy(n =&gt; n.TenChuDe).ToList(), "MaChuDe", "TenChuDe");
<br>
ViewBag.MaNXB = new SelectList(data.NhaXuatBans.ToList().OrderBy(n =&gt; n.TenNXB).ToList(), "MaNXB", "TenNXB");
<br>
return View();
<br>
}
<br>
}
<br>
<br>
[HttpPost]
<br>
public ActionResult ThemmoiSach(Sach sach, IFormFile fileUpload, IFormCollection f)
<br>
{
<br>
if (HttpContext.Session.GetObject&lt;Admin&gt;("Taikhoanadmin") == null)
<br>
return RedirectToAction("Login", "Admin");
<br>
else
<br>
{
<br>
&#47;&#47;Kiem tra duong dan file
<br>
if (fileUpload == null || fileUpload != null && fileUpload.FileName.Length == 0)
<br>
{
<br>
ViewBag.Thongbao = "Vui lòng chọn ảnh bìa";
<br>
ViewBag.MaCD = new SelectList(data.ChuDes.ToList().OrderBy(n =&gt; n.TenChuDe).ToList(), "MaChuDe", "TenChuDe");
<br>
ViewBag.MaNXB = new SelectList(data.NhaXuatBans.ToList().OrderBy(n =&gt; n.TenNXB).ToList(), "MaNXB", "TenNXB");
<br>
return View();
<br>
}
<br>
&#47;&#47;Them vao CSDL
<br>
else
<br>
{
<br>
&#47;&#47;Luu ten fie, luu y bo sung thu vien using System.IO;
<br>
var fileName = Path.GetFileName(fileUpload.FileName);
<br>
&#47;&#47;Luu duong dan cua file
<br>
var path = Path.Combine(_webHostEnvironment.WebRootPath, "Hinhsanpham", fileName);
<br>
&#47;&#47;Kiem tra hình anh ton tai chua?
<br>
if (System.IO.File.Exists(path))
<br>
ViewBag.Thongbao = "Hình ảnh đã tồn tại";
<br>
else
<br>
{
<br>
&#47;&#47;Luu hinh anh vao duong dan
<br>
using (Stream fileStream = new FileStream(path, FileMode.Create))
<br>
{
<br>
fileUpload.CopyTo(fileStream);
<br>
}
<br>
sach.AnhBia = fileName;
<br>
<br>
sach.MaChuDe = Guid.Parse(f["MaCD"].ToString());
<br>
sach.MaNXB = Guid.Parse(f["MaNXB"].ToString());
<br>
<br>
&#47;&#47;Luu vao CSDL
<br>
data.Sachs.Add(sach);
<br>
data.SaveChanges();
<br>
}
<br>
}
<br>
return RedirectToAction("Sach", "QuanLy_Sach");
<br>
}
<br>
}
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
- Tại Views (ví dụ) :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
&commat;model WebBanSach.Models.Sach
<br>
<br>
&commat;{
<br>
ViewBag.Title = "Themoisach";
<br>
Layout = "~&#47;Views&#47;Shared&#47;_Layout.cshtml";
<br>
}
<br>
<br>
&lt;h2&gt;THÊM MỚI SÁCH&lt;&#47;h2&gt;
<br>
<br>
&commat;using (Html.BeginForm("_TÊN VIEW_", "_TÊN CONTROLLER_", FormMethod.Post, new { &commat;enctype = "multipart&#47;form-data" }))
<br>
<br>
{
<br>
&commat;Html.AntiForgeryToken()
<br>
<br>
&lt;div class="form-horizontal"&gt;
<br>
&lt;hr &#47;&gt;
<br>
<br>
&commat;Html.ValidationSummary(true, "", new { &commat;class = "text-danger" })
<br>
&lt;div class="form-group"&gt;
<br>
&commat;Html.LabelFor(model =&gt; model.TenSach, htmlAttributes: new { &commat;class = "control-label col-md-2" })
<br>
&lt;div class="col-md-10"&gt;
<br>
&commat;Html.EditorFor(model =&gt; model.TenSach, new { htmlAttributes = new { &commat;class = "form-control" } })
<br>
&commat;Html.ValidationMessageFor(model =&gt; model.TenSach, "", new { &commat;class = "text-danger" })
<br>
&lt;&#47;div&gt;
<br>
&lt;&#47;div&gt;
<br>
<br>
...
<br>
<br>
&lt;div class="form-group"&gt;
<br>
&commat;Html.LabelFor(model =&gt; model.AnhBia, htmlAttributes: new { &commat;class = "control-label col-md-2" })
<br>
&lt;div class="col-md-10"&gt;
<br>
&lt;input type="file" name="fileUpload" &#47;&gt;
<br>
&commat;ViewBag.Thongbao
<br>
&lt;&#47;div&gt;
<br>
&lt;&#47;div&gt;
<br>
<br>
&lt;div class="form-group"&gt;
<br>
&commat;Html.LabelFor(model =&gt; model.NgayCapNhat, htmlAttributes: new { &commat;class = "control-label col-md-2" })
<br>
&lt;div class="col-md-10"&gt;
<br>
&lt;input type="date" name="Ngaycapnhat" &#47;&gt;
<br>
&lt;&#47;div&gt;
<br>
&lt;&#47;div&gt;
<br>
<br>
&lt;div class="form-group"&gt;
<br>
&commat;Html.LabelFor(model =&gt; model.MaChuDe, htmlAttributes: new { &commat;class = "control-label col-md-2" })
<br>
&lt;div class="col-md-10"&gt;
<br>
&commat;Html.DropDownList("MaCD")
<br>
&lt;&#47;div&gt;
<br>
&lt;&#47;div&gt;
<br>
<br>
...
<br>
<br>
&lt;&#47;div&gt;
<br>
<br>
&lt;div class="form-group"&gt;
<br>
&lt;div class="col-md-offset-2 col-md-10"&gt;
<br>
&lt;input type="submit" value="LƯU" class="btn btn-default" &#47;&gt;
<br>
&lt;&#47;div&gt;
<br>
&lt;&#47;div&gt;
<br>
&lt;&#47;div&gt;
<br>
}
<br>
<br>
&lt;div&gt;
<br>
&commat;Html.ActionLink("Trở về", "_TÊN VIEW HIỂN THỊ SÁCH_")
<br>
&lt;&#47;div&gt;
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
# Ví dụ Views Chi Tiết Sản Phẩm (Quản Lý Bán Sách) :
<br>
<br>
- Tại controller (ví dụ) :
<br>
<br>
public ActionResult Chitietsach(Guid id)
<br>
{
<br>
if (HttpContext.Session.GetObject&lt;Admin&gt;("Taikhoanadmin") == null)
<br>
return RedirectToAction("Login", "Admin");
<br>
else
<br>
{
<br>
var sach = from s in data.Sachs where s.MaSach == id select s;
<br>
return View(sach.SingleOrDefault());
<br>
}
<br>
}
<br>
<br>
- Tại views (ví dụ ) :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
&commat;model WebBanSach.Models.Sach
<br>
<br>
&commat;{
<br>
ViewBag.Title = "Chitietsach";
<br>
Layout = "~&#47;Views&#47;Shared&#47;_Layout.cshtml";
<br>
}
<br>
<br>
&lt;div&gt;
<br>
&lt;h4&gt;THÔNG TIN CHI TIẾT SÁCH&lt;&#47;h4&gt;
<br>
&lt;hr &#47;&gt;
<br>
&lt;dl class="dl-horizontal"&gt;
<br>
&lt;dt&gt;
<br>
&commat;Html.DisplayNameFor(model =&gt; model.TenSach)
<br>
&lt;&#47;dt&gt;
<br>
<br>
&lt;dd&gt;
<br>
&commat;Html.DisplayFor(model =&gt; model.TenSach)
<br>
&lt;&#47;dd&gt;
<br>
<br>
&lt;dt&gt;
<br>
&commat;Html.DisplayNameFor(model =&gt; model.AnhBia)
<br>
&lt;&#47;dt&gt;
<br>
<br>
&lt;dd&gt;
<br>
<br>
&lt;img src="&commat;Url.Content("~&#47;Hinhsanpham&#47;"+  Model.AnhBia)" width="120px" &#47;&gt;
<br>
&lt;&#47;dd&gt;
<br>
<br>
&lt;dt&gt;
<br>
&commat;Html.DisplayNameFor(model =&gt; model.NgayCapNhat)
<br>
&lt;&#47;dt&gt;
<br>
<br>
&lt;dd&gt;
<br>
&commat;String.Format("{0:dd&#47;MM&#47;yyy}", Model.NgayCapNhat)
<br>
<br>
&lt;&#47;dd&gt;
<br>
<br>
...
<br>
<br>
&lt;dt&gt;
<br>
&commat;Html.DisplayNameFor(model =&gt; model.ChuDe.TenChuDe)
<br>
&lt;&#47;dt&gt;
<br>
<br>
&lt;dd&gt;
<br>
&commat;Html.DisplayFor(modelItem =&gt; Model.ChuDe.TenChuDe) &#47;&#47; Khoá ngoại của bảng Sách là mã chủ đề từ bảng Chủ Đề (muốn lấy tên)
<br>
&lt;&#47;dd&gt;
<br>
<br>
&lt;&#47;dl&gt;
<br>
&lt;&#47;div&gt;
<br>
&lt;p&gt;
<br>
&commat;Html.ActionLink("Sửa", "_TÊN VIEW SỬA SÁCH_", new { id = Model.MaSach }) |
<br>
&commat;Html.ActionLink("Trở về", "_TÊN VIEW HIỂN THỊ SÁCH_")
<br>
&lt;&#47;p&gt;
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
# Ví dụ Views chỉnh sửa một sản phẩm (Quản Lý Bán Sách) :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
public ActionResult Suasach(Guid id)
<br>
{
<br>
if (HttpContext.Session.GetObject&lt;Admin&gt;("Taikhoanadmin") == null)
<br>
return RedirectToAction("Login", "Admin");
<br>
else
<br>
{
<br>
Sach sach = data.Sachs.SingleOrDefault(n =&gt; n.MaSach == id);
<br>
<br>
&#47;&#47;Lay du liệu từ table Chude để đổ vào Dropdownlist... 
<br>
ViewBag.MaCD = new SelectList(data.ChuDes.ToList().OrderBy(n =&gt; n.TenChuDe).ToList(), "MaChuDe", "TenChuDe", sach.MaChuDe);
<br>
ViewBag.MaNXB = new SelectList(data.NhaXuatBans.ToList().OrderBy(n =&gt; n.TenNXB).ToList(), "MaNXB", "TenNXB", sach.MaNXB);
<br>
return View(sach);
<br>
}
<br>
}
<br>
<br>
private void UpdateModel_Sach (Sach sach, IFormCollection fo, IFormFile Anhbia)
<br>
{
<br>
&#47;&#47; Tìm tên file ảnh bìa cũ để xoá
<br>
<br>
Sach s = data.Sachs.FirstOrDefault(p =&gt; p.MaSach == sach.MaSach);
<br>
<br>
if (Anhbia != null && Anhbia.FileName.Length &gt; 0)
<br>
{
<br>
&#47;&#47; Xoá ảnh cũ ...
<br>
<br>
var path = Path.Combine(_webHostEnvironment.WebRootPath, "Hinhsanpham", s.AnhBia);
<br>
FileInfo f = new FileInfo(path);
<br>
f.Delete();
<br>
<br>
&#47;&#47; Cài thêm ảnh mới khác...
<br>
<br>
var fileName = Path.GetFileName(Anhbia.FileName);
<br>
var path2 = Path.Combine(_webHostEnvironment.WebRootPath, "Hinhsanpham", fileName);
<br>
using (Stream fileStream = new FileStream(path2, FileMode.Create))
<br>
{
<br>
Anhbia.CopyTo(fileStream);
<br>
}
<br>
s.AnhBia = fileName;
<br>
}
<br>
<br>
&#47;&#47; Cập nhật thông tin khác cho sách...
<br>
s.TenSach = sach.TenSach;
<br>
s.NgayCapNhat = sach.NgayCapNhat;
<br>
s.GiaBan = sach.GiaBan;
<br>
s.MoTa = sach.MoTa;
<br>
s.SoLuongTon = sach.SoLuongTon;
<br>
<br>
&#47;&#47; Khoá ngoại mã chủ đề của bảng Sách từ bảng Chủ Đề...
<br>
s.MaChuDe = Guid.Parse(fo["MaCD"].ToString());
<br>
s.MaNXB = Guid.Parse(fo["MaNXB"].ToString());
<br>
<br>
&#47;&#47;Luu vao CSDL
<br>
data.Sachs.Update(s);
<br>
data.SaveChanges();
<br>
}
<br>
<br>
[HttpPost, ActionName("Suasach")]
<br>
public ActionResult Xacnhansua_Sach(Sach sach, IFormCollection f, IFormFile Anhbia)
<br>
{
<br>
if (HttpContext.Session.GetObject&lt;Admin&gt;("Taikhoanadmin") == null)
<br>
return RedirectToAction("Login", "Admin");
<br>
else
<br>
{
<br>
UpdateModel_Sach(sach, f, Anhbia);
<br>
return RedirectToAction("Sach", "QuanLy_Sach");
<br>
}
<br>
}
<br>
}
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
- Tại Views (ví dụ) :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
&commat;model WebBanSach.Models.Sach
<br>
<br>
&commat;{
<br>
ViewBag.Title = "Suasach";
<br>
Layout = "~&#47;Views&#47;Shared&#47;_Layout.cshtml";
<br>
}
<br>
<br>
&lt;h2&gt;ĐIỀU CHỈNH THÔNG TIN SÁCH&lt;&#47;h2&gt;
<br>
<br>
&commat;using (Html.BeginForm("Suasach", "QuanLy_Sach", FormMethod.Post, new { &commat;enctype = "multipart&#47;form-data" }))
<br>
{
<br>
&commat;Html.AntiForgeryToken()
<br>
<br>
&lt;div class="form-horizontal"&gt;
<br>
&lt;hr &#47;&gt;
<br>
&commat;Html.ValidationSummary(true, "", new { &commat;class = "text-danger" })
<br>
<br>
&commat;Html.HiddenFor(model =&gt; model.MaSach)
<br>
<br>
&lt;div class="form-group"&gt;
<br>
&commat;Html.LabelFor(model =&gt; model.TenSach, htmlAttributes: new { &commat;class = "control-label col-md-2" })
<br>
&lt;div class="col-md-10"&gt;
<br>
&commat;Html.EditorFor(model =&gt; model.TenSach, new { htmlAttributes = new { &commat;class = "form-control" } })
<br>
&commat;Html.ValidationMessageFor(model =&gt; model.TenSach, "", new { &commat;class = "text-danger" })
<br>
&lt;&#47;div&gt;
<br>
&lt;&#47;div&gt;
<br>
<br>
&lt;div class="form-group"&gt;
<br>
&commat;Html.LabelFor(model =&gt; model.MoTa, htmlAttributes: new { &commat;class = "control-label col-md-2" })
<br>
&lt;div class="col-md-10"&gt;
<br>
<br>
&lt;textarea cols="40" rows="10" name="Mota"&gt; &commat;Model.MoTa &lt;&#47;textarea&gt;
<br>
&lt;&#47;div&gt;
<br>
&lt;&#47;div&gt;
<br>
<br>
&lt;div class="form-group"&gt;
<br>
&commat;Html.LabelFor(model =&gt; model.AnhBia, htmlAttributes: new { &commat;class = "control-label col-md-2" })
<br>
&lt;div class="col-md-10"&gt;
<br>
&lt;img src="~&#47;Hinhsanpham&#47;&commat;Model.AnhBia" &#47;&gt; &commat;Model.AnhBia
<br>
&lt;input type="file" name="Anhbia" &#47;&gt;
<br>
&lt;&#47;div&gt;
<br>
&lt;&#47;div&gt;
<br>
<br>
&lt;div class="form-group"&gt;
<br>
&commat;Html.LabelFor(model =&gt; model.NgayCapNhat, htmlAttributes: new { &commat;class = "control-label col-md-2" })
<br>
&lt;div class="col-md-10"&gt;
<br>
&commat;String.Format("{0:dd&#47;MM&#47;yyyy}", Model.NgayCapNhat)
<br>
&lt;input type="date" name="Ngaycapnhat" &#47;&gt;
<br>
<br>
&lt;&#47;div&gt;
<br>
&lt;&#47;div&gt;
<br>
<br>
&lt;div class="form-group"&gt;
<br>
&commat;Html.LabelFor(model =&gt; model.MaNXB, htmlAttributes: new { &commat;class = "control-label col-md-2" })
<br>
&lt;div class="col-md-10"&gt;
<br>
&commat;Html.DropDownList("MaNXB")
<br>
&lt;&#47;div&gt;
<br>
&lt;&#47;div&gt;
<br>
<br>
&lt;div class="form-group"&gt;
<br>
&lt;div class="col-md-offset-2 col-md-10"&gt;
<br>
&lt;input type="submit" value="LƯU" class="btn btn-default" &#47;&gt;
<br>
&lt;&#47;div&gt;
<br>
&lt;&#47;div&gt;
<br>
&lt;&#47;div&gt;
<br>
}
<br>
<br>
&lt;div&gt;
<br>
&commat;Html.ActionLink("Trở về", "_TÊN VIEW HIỂN THỊ SÁCH_")
<br>
&lt;&#47;div&gt;
<br>
<br>
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
# Ví dụ Views xoá 1 sản phẩm (Quản Lý Bán Sách) : 
<br>
<br>
- Tại controller (ví dụ) :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
[HttpGet]
<br>
public ActionResult Xoasach(Guid id)
<br>
{
<br>
if (HttpContext.Session.GetObject&lt;Admin&gt;("Taikhoanadmin") == null)
<br>
return RedirectToAction("Login", "Admin");
<br>
else
<br>
{
<br>
var sach = from s in data.Sachs where s.MaSach == id select s;
<br>
return View(sach.SingleOrDefault());
<br>
}
<br>
}
<br>
<br>
[HttpPost, ActionName("Xoasach")]
<br>
public ActionResult Xacnhanxoa_Sach(Guid id)
<br>
{
<br>
if (HttpContext.Session.GetObject&lt;Admin&gt;("Taikhoanadmin") == null)
<br>
return RedirectToAction("Login", "Admin");
<br>
else
<br>
{
<br>
Sach sach = data.Sachs.SingleOrDefault(n =&gt; n.MaSach == id);
<br>
<br>
&#47;&#47; Xoá CSDL đồng nghĩa xoá luôn file sách đó trong wwwroot
<br>
var path = Path.Combine(_webHostEnvironment.WebRootPath, "Hinhsanpham", sach.AnhBia);
<br>
FileInfo f = new FileInfo(path);
<br>
f.Delete();
<br>
<br>
data.Sachs.Remove(sach);
<br>
<br>
data.SaveChanges();
<br>
return RedirectToAction("Sach", "QuanLy_Sach");
<br>
}
<br>
}
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
- Tại Views (ví dụ) :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
&commat;model WebBanSach.Models.Sach
<br>
<br>
&commat;{
<br>
ViewBag.Title = "Xoasach";
<br>
Layout = "~&#47;Views&#47;Shared&#47;_Layout.cshtml";
<br>
}
<br>
<br>
&lt;h2&gt;XÁC NHẬN THÔNG TIN XÓA&lt;&#47;h2&gt;
<br>
<br>
&lt;h4 style="color:red; font-style:italic"&gt;Bạn có chắc chắn muốn xóa quyển sách này?&lt;&#47;h4&gt;
<br>
&lt;div&gt;
<br>
&lt;hr &#47;&gt;
<br>
&lt;dl class="dl-horizontal"&gt;
<br>
&lt;dt&gt;
<br>
&commat;Html.DisplayNameFor(model =&gt; model.TenSach)
<br>
&lt;&#47;dt&gt;
<br>
<br>
&lt;dd&gt;
<br>
&commat;Html.DisplayFor(model =&gt; model.TenSach)
<br>
&lt;&#47;dd&gt;
<br>
<br>
&lt;dt&gt;
<br>
&commat;Html.DisplayNameFor(model =&gt; model.AnhBia)
<br>
&lt;&#47;dt&gt;
<br>
<br>
&lt;dd&gt;
<br>
<br>
&lt;img src="&commat;Url.Content("~&#47;Hinhsanpham&#47;"+  Model.AnhBia)" width="120px" &#47;&gt;
<br>
&lt;&#47;dd&gt;
<br>
<br>
&lt;dt&gt;
<br>
&commat;Html.DisplayNameFor(model =&gt; model.NgayCapNhat)
<br>
&lt;&#47;dt&gt;
<br>
<br>
&lt;dd&gt;
<br>
&commat;String.Format("{0:dd&#47;MM&#47;yyy}", Model.NgayCapNhat)
<br>
<br>
&lt;&#47;dd&gt;
<br>
<br>
...
<br>
<br>
&lt;dt&gt;
<br>
&commat;Html.DisplayNameFor(model =&gt; model.MaChuDe)
<br>
&lt;&#47;dt&gt;
<br>
<br>
&lt;dd&gt;
<br>
&commat;Html.DisplayFor(modelItem =&gt; Model.ChuDe.TenChuDe) &#47;&#47; Khoá ngoại của bảng Sách là mã chủ đề từ bảng Chủ Đề (muốn lấy tên)
<br>
&lt;&#47;dd&gt;
<br>
<br>
&lt;&#47;dl&gt;
<br>
<br>
&commat;using (Html.BeginForm())
<br>
{
<br>
&commat;Html.AntiForgeryToken()
<br>
<br>
&lt;div class="form-actions no-color"&gt;
<br>
&lt;input type="submit" value="Xóa" class="btn btn-default" &#47;&gt; |
<br>
&commat;Html.ActionLink("Trở về", "_TÊN VIEW HIỂN THỊ SÁCH_")
<br>
&lt;&#47;div&gt;
<br>
}
<br>
&lt;&#47;div&gt;
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
# Ví dụ về Views đăng ký tài khoản :
<br>
<br>
- Tại controller :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
[HttpGet]
<br>
public ActionResult Dangky()
<br>
{
<br>
return View();
<br>
}
<br>
<br>
[HttpPost]
<br>
public ActionResult Dangky(IFormCollection collection, KhachHang kh)
<br>
{
<br>
&#47;&#47; Gán các giá trị người dùng nhập liệu trong Views cho các biến 
<br>
var hoten = collection["HotenKH"];
<br>
...
<br>
var ngaysinh = String.Format("{0:MM&#47;dd&#47;yyyy}", collection["Ngaysinh"]);
<br>
<br>
if (String.IsNullOrEmpty(hoten))
<br>
{
<br>
ViewData["Loi1"] = "Họ tên khách hàng không được để trống";
<br>
}
<br>
else if ...
<br>
else
<br>
{
<br>
&#47;&#47;Gán giá trị cho đối tượng được tạo mới (kh)
<br>
<br>
kh.MaKH = new Guid();
<br>
kh.HoTen = hoten;
<br>
...
<br>
kh.MatKhau = MD5_Encrypt.MD5_Encrypt.MD5_Password(matkhau); &#47;&#47; mã hoá MD5 cho mật khẩu
<br>
...
<br>
kh.NgaySinh = DateTime.Parse(ngaysinh);
<br>
<br>
db.KhachHangs.Add(kh);
<br>
db.SaveChanges();
<br>
<br>
&#47;&#47; Sau khi đăng ký thành công, chuyển hướng sang trang Login
<br>
return RedirectToAction("Dangnhap", "Nguoidung");
<br>
}
<br>
HttpContext.Session.SetString("data-result", "true"); return this.Dangky();
<br>
}
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
- Tại Views :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
&lt;table align="center"&gt;
<br>
&lt;h2 style="text-align:center"&gt;ĐĂNG KÝ THÀNH VIÊN&lt;&#47;h2&gt;
<br>
&commat;using (Html.BeginForm())
<br>
{
<br>
&commat;Html.ValidationSummary(true)
<br>
<br>
&lt;tr style="height:40px"&gt;
<br>
&lt;td&gt; Họ tên khách hàng:&lt;&#47;td&gt;
<br>
&lt;td&gt;
<br>
&commat;Html.TextBox("HotenKH")
<br>
&lt;span style="color:red; font-style:italic"&gt; &commat;ViewData["Loi1"] &lt;&#47;span&gt;
<br>
&lt;&#47;td&gt;
<br>
&lt;&#47;tr&gt;
<br>
<br>
&lt;tr style="height:40px"&gt;
<br>
&lt;td&gt;  Mật khẩu:&lt;&#47;td&gt;
<br>
&lt;td&gt;
<br>
&commat;Html.Password("Matkhau")
<br>
&commat;ViewData["Loi3"]
<br>
&lt;&#47;td&gt;
<br>
&lt;&#47;tr&gt;
<br>
<br>
&lt;tr style="height:40px"&gt;
<br>
&lt;td&gt; Ngày sinh :&lt;&#47;td&gt;
<br>
&lt;td&gt;
<br>
&lt;input type="date" name="Ngaysinh" &#47;&gt;
<br>
&lt;&#47;td&gt;
<br>
&lt;&#47;tr&gt;
<br>
<br>
&lt;tr style="height:40px"&gt;
<br>
&lt;td&gt;&lt;&#47;td&gt;
<br>
&lt;td&gt;
<br>
&lt;input type="Submit" value="Đăng ký" &#47;&gt;
<br>
&lt;&#47;td&gt;
<br>
&lt;&#47;tr&gt;
<br>
}
<br>
&lt;&#47;table&gt;
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
# Ví dụ về Views đăng nhập tài khoản :
<br>
<br>
- Tại controller :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
[HttpGet]
<br>
public ActionResult Dangnhap()
<br>
{
<br>
return View();
<br>
}
<br>
<br>
[HttpPost]
<br>
public ActionResult Dangnhap(IFormCollection f)
<br>
{
<br>
string tendn = f["TenDN"];
<br>
string matkhau = MD5_Encrypt.MD5_Encrypt.MD5_Password(f["Matkhau"]);
<br>
<br>
if (String.IsNullOrEmpty(tendn))
<br>
ViewData["Loi1"] = "Vui lòng nhập tên đăng nhập";
<br>
else if ...
<br>
else
<br>
{
<br>
<br>
var kh = db.KhachHangs.SingleOrDefault(n =&gt; n.TaiKhoan == tendn && n.MatKhau == matkhau);
<br>
<br>
&#47;&#47; Lưu thông tin đăng nhập vào Session khi Login thành công!
<br>
if (kh != null)
<br>
{
<br>
&#47;&#47;Session["Taikhoan"] = kh;
<br>
HttpContext.Session.SetObject("Taikhoan", kh);
<br>
<br>
return RedirectToAction("Index", "BookStore");
<br>
}
<br>
else
<br>
ViewBag.Thongbao = "Tên đăng nhập hoặc mật khẩu không hợp lệ";
<br>
}
<br>
<br>
return View();
<br>
}
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
- Tại Views :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
&lt;table align="center"&gt;
<br>
&lt;h2 style="text-align:center"&gt;ĐĂNG NHẬP&lt;&#47;h2&gt;
<br>
&lt;h4 style="color:red; text-align:center; font-style:italic"&gt; &commat;ViewBag.Thongbao &lt;&#47;h4&gt;
<br>
&commat;using (Html.BeginForm())
<br>
{
<br>
&commat;Html.ValidationSummary(true)
<br>
<br>
&lt;tr style="height:40px"&gt;
<br>
&lt;td&gt; Tên đăng nhập:&lt;&#47;td&gt;
<br>
&lt;td&gt;
<br>
&commat;Html.TextBox("TenDN")
<br>
&commat;ViewData["Loi1"]
<br>
&lt;&#47;td&gt;
<br>
&lt;&#47;tr&gt;
<br>
<br>
&lt;tr style="height:40px"&gt;
<br>
&lt;td&gt;  Mật khẩu:&lt;&#47;td&gt;
<br>
&lt;td&gt;
<br>
&commat;Html.Password("Matkhau")
<br>
&commat;ViewData["Loi2"]
<br>
&lt;&#47;td&gt;
<br>
&lt;&#47;tr&gt;
<br>
<br>
&lt;tr style="height:40px"&gt;
<br>
&lt;td&gt;&lt;&#47;td&gt;
<br>
&lt;td&gt;
<br>
&lt;input type="Submit" value="Đăng nhập" &#47;&gt;
<br>
&lt;&#47;td&gt;
<br>
&lt;&#47;tr&gt;
<br>
}
<br>
&lt;&#47;table&gt;
<br>
<br>
&lt;div&gt;
<br>
&commat;Html.ActionLink("Quên mật khẩu?", "ForgetPassword")
<br>
&lt;&#47;div&gt;
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
# Ví dụ về quên mật khẩu tài khoản (gửi mã qua Email - Gmail để xác minh) :
<br>
<br>
- Tại controller (Views quên mật khẩu) :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
[HttpGet]
<br>
public ActionResult ForgetPassWord()
<br>
{
<br>
return View();
<br>
}
<br>
<br>
[HttpPost]
<br>
public ActionResult ForgetPassWord(IFormCollection f)
<br>
{
<br>
var confirm = f["ConfirmEmail"];
<br>
if (String.IsNullOrEmpty(confirm))
<br>
{
<br>
ViewData["Loi1"] = "Email khôi phục không được để trống";
<br>
}
<br>
else if (db.KhachHangs.FirstOrDefault(p =&gt; p.Email == confirm.ToString()) == null)
<br>
{
<br>
ViewData["Loi1"] = "Email này chưa liên kết tài khoản nào";
<br>
}
<br>
else
<br>
{
<br>
Random r = new Random();
<br>
var x = r.Next(12345, 98765); &#47;&#47; tạo mã xác minh bí mật bất kỳ
<br>
<br>
&#47;&#47; Gửi email nội dung - ví dụ khôi phục password...
<br>
SendEmail.SendMail2Step("bvanluat2000&commat;gmail.com",
<br>
confirm.ToString(), "Web Ban Sach - Reset Password", "Your code to reset your password is " + x.ToString() + ". Please return and use this code to enter !", "pkzrigpkwkrffyet");
<br>
<br>
&#47;&#47; Lưu mã xác minh để áp dụng sang Views khác (cụ thể để USER nhập mã này sau khi nhận đc mail)
<br>
TempData["Code"] = x.ToString();
<br>
<br>
return RedirectToAction("ConfirmEmail", "Nguoidung", new {email = confirm});
<br>
}
<br>
HttpContext.Session.SetString("data-result", "true"); return this.ForgetPassWord();
<br>
}
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
- Tại Views (Quên mật khẩu) :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
&lt;h2&gt;Khôi phục mật khẩu của bạn&lt;&#47;h2&gt;
<br>
<br>
&lt;table align="center"&gt;
<br>
&commat;using (Html.BeginForm())
<br>
{
<br>
&commat;Html.ValidationSummary(true)
<br>
<br>
&lt;tr style="height:40px"&gt;
<br>
&lt;td&gt; Nhập Email liên kết tài khoản của bạn : &lt;&#47;td&gt;
<br>
&lt;td&gt;
<br>
&commat;Html.TextBox("ConfirmEmail")
<br>
&lt;span style="color:red; font-style:italic"&gt; &commat;ViewData["Loi1"] &lt;&#47;span&gt;
<br>
&lt;&#47;td&gt;
<br>
&lt;&#47;tr&gt;
<br>
<br>
&lt;tr style="height:40px"&gt;
<br>
&lt;td&gt;&lt;&#47;td&gt;
<br>
&lt;td&gt;
<br>
&lt;input type="Submit" value="Gửi xác minh" &#47;&gt;
<br>
&lt;&#47;td&gt;
<br>
&lt;&#47;tr&gt;
<br>
}
<br>
&lt;&#47;table&gt;
<br>
<br>
&lt;div&gt;
<br>
&commat;Html.ActionLink("Trở về", "_TÊN VIEW ĐĂNG NHẬP_")
<br>
&lt;&#47;div&gt;
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
###
<br>
<br>
- Tại controller (View nhập mã xác minh sau khi nhận được mail) :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
[HttpGet]
<br>
public ActionResult ConfirmEmail (string email)
<br>
{
<br>
ViewBag.Email = email; &#47;&#47; để hiển thị lên Views email mà người dùng đã nhập cần khôi phục Password...
<br>
<br>
&#47;&#47; Lấy và lưu trữ lại mã xác minh cũ (đã gửi trong email trước đó)
<br>
ViewBag.Code = TempData["Code"];
<br>
TempData["Code"] = ViewBag.Code;
<br>
<br>
if (db.KhachHangs.FirstOrDefault(p =&gt; p.Email == email) == null)
<br>
{
<br>
ViewData["Loi1"] = "Email này chưa liên kết tài khoản nào";
<br>
HttpContext.Session.SetString("data-result", "true"); return this.ForgetPassWord();
<br>
}
<br>
return View();
<br>
}
<br>
<br>
[HttpPost]
<br>
public ActionResult ConfirmEmail(IFormCollection f, string email)
<br>
{
<br>
string codeResult = TempData["Code"].ToString();
<br>
<br>
var confirm = f["EmailConfirm"];
<br>
if (String.IsNullOrEmpty(confirm))
<br>
{
<br>
ViewData["Loi1"] = "Mã xác minh không được trống";
<br>
}
<br>
else if (String.Compare(confirm, codeResult, false) != 0) &#47;&#47; Mã xác minh phân biệt hoa thường
<br>
{
<br>
ViewData["Loi1"] = "Mã xác minh không đúng";
<br>
}
<br>
else
<br>
{
<br>
return RedirectToAction("ChangePassword", "Nguoidung", new { email = email });
<br>
}
<br>
HttpContext.Session.SetString("data-result", "true"); return this.ConfirmEmail(email);
<br>
}
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
- Tại Views (nhập mã xác minh sau khi nhận được email) :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
&lt;h2&gt;Khôi phục mật khẩu của bạn&lt;&#47;h2&gt;
<br>
&lt;hr &#47;&gt;
<br>
&lt;h2&gt;Hệ thống đã gửi một mã xác minh đến email &commat;ViewBag.Email để giúp bạn khôi phục mật khẩu. Kiểm tra Email và xác nhận.&lt;&#47;h2&gt;
<br>
<br>
&lt;table align="center"&gt;
<br>
&commat;using (Html.BeginForm())
<br>
{
<br>
&commat;Html.ValidationSummary(true)
<br>
&lt;tr style="height:40px"&gt;
<br>
&lt;td&gt; Nhập mã xác minh : &lt;&#47;td&gt;
<br>
&lt;td&gt;
<br>
&commat;Html.TextBox("EmailConfirm")
<br>
&lt;span style="color:red; font-style:italic"&gt; &commat;ViewData["Loi1"] &lt;&#47;span&gt;
<br>
&lt;&#47;td&gt;
<br>
&lt;&#47;tr&gt;
<br>
&lt;tr style="height:40px"&gt;
<br>
&lt;td&gt;&lt;&#47;td&gt;
<br>
&lt;td&gt;
<br>
&lt;input type="Submit" value="Xác minh" &#47;&gt;
<br>
&lt;&#47;td&gt;
<br>
&lt;&#47;tr&gt;
<br>
}
<br>
&lt;&#47;table&gt;
<br>
&lt;div&gt;
<br>
&commat;Html.ActionLink("Trở về", "_TÊN VIEW ĐĂNG NHẬP_")
<br>
&lt;&#47;div&gt;
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
###
<br>
<br>
- Tại controller (đổi mật khẩu mới sau khi xác minh) :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
[HttpGet]
<br>
public ActionResult ChangePassword(string email)
<br>
{
<br>
ViewBag.Email = email;
<br>
return View();
<br>
}
<br>
<br>
[HttpPost]
<br>
public ActionResult ChangePassword(IFormCollection f, string email)
<br>
{
<br>
var pass = f["Password"];
<br>
var confirm = f["PasswordConfirm"];
<br>
if (String.IsNullOrEmpty(pass))
<br>
{
<br>
ViewData["Loi1"] = "Trường này không được trống";
<br>
}
<br>
else if ...
<br>
else if (String.Compare(confirm, pass, false) != 0)
<br>
{
<br>
ViewData["Loi2"] = "Mật khẩu xác nhận không trùng khớp";
<br>
}
<br>
else
<br>
{
<br>
KhachHang kh = db.KhachHangs.FirstOrDefault(p =&gt; p.Email == email);
<br>
kh.MatKhau = MD5_Encrypt.MD5_Encrypt.MD5_Password(pass);
<br>
db.KhachHangs.Update(kh);
<br>
db.SaveChanges();
<br>
<br>
return RedirectToAction("Dangnhap");
<br>
}
<br>
HttpContext.Session.SetString("data-result", "true"); return this.ChangePassword(email);
<br>
}
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
- Tại Views (đổi mật khẩu mới sau khi xác minh) :
<br>
<br>
--------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
&lt;h2&gt;Thay đổi mật khẩu - &commat;ViewBag.Email&lt;&#47;h2&gt;
<br>
&lt;hr &#47;&gt;
<br>
<br>
&lt;table align="center"&gt;
<br>
&commat;using (Html.BeginForm())
<br>
{
<br>
&commat;Html.ValidationSummary(true)
<br>
<br>
&lt;tr style="height:40px"&gt;
<br>
&lt;td&gt; Nhập mật khẩu mới : &lt;&#47;td&gt;
<br>
&lt;td&gt;
<br>
&commat;Html.Password("Password")
<br>
&lt;span style="color:red; font-style:italic"&gt; &commat;ViewData["Loi1"] &lt;&#47;span&gt;
<br>
&lt;&#47;td&gt;
<br>
&lt;&#47;tr&gt;
<br>
&lt;tr style="height:40px"&gt;
<br>
&lt;td&gt; Xác nhận mật khẩu mới : &lt;&#47;td&gt;
<br>
&lt;td&gt;
<br>
&commat;Html.Password("PasswordConfirm")
<br>
&lt;span style="color:red; font-style:italic"&gt; &commat;ViewData["Loi2"] &lt;&#47;span&gt;
<br>
&lt;&#47;td&gt;
<br>
&lt;&#47;tr&gt;
<br>
&lt;tr style="height:40px"&gt;
<br>
&lt;td&gt;&lt;&#47;td&gt;
<br>
&lt;td&gt;
<br>
&lt;input type="Submit" value="Đổi mật khẩu" &#47;&gt;
<br>
&lt;&#47;td&gt;
<br>
&lt;&#47;tr&gt;
<br>
}
<br>
&lt;&#47;table&gt;
<br>
<br>
&lt;div&gt;
<br>
&commat;Html.ActionLink("Trở về", "_TÊN VIEW ĐĂNG NHẬP_")
<br>
&lt;&#47;div&gt;
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
# Phân Trang : 
<br>
<br>
- Tại Views&#47;Shared, tạo và copy nội dung file _Paging.cshtml : 
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
&commat;*
<br>
Model:
<br>
- currentPage:int - Trang hiện tại
<br>
- countPages:int - tổng số trang
<br>
- generateUrl:delegate Func&lt;int?, string&gt; trả về URL tương ứng với trang p (1,2,3 ...)
<br>
*&commat;
<br>
<br>
&commat;model dynamic
<br>
&commat;{
<br>
int currentPage = ViewBag.TrangHienTai;
<br>
int countPages = ViewBag.TongSoTrang;
<br>
var generateUrl = ViewBag.SetLink;
<br>
<br>
if (currentPage &gt; countPages)
<br>
currentPage = countPages;
<br>
<br>
if (countPages &lt;= 1) return;
<br>
<br>
<br>
int? preview = null;
<br>
int? next = null;
<br>
<br>
if (currentPage &gt; 1)
<br>
preview = currentPage - 1;
<br>
<br>
if (currentPage &lt; countPages)
<br>
next = currentPage + 1;
<br>
<br>
&#47;&#47; Các trang hiện thị trong điều hướng
<br>
List&lt;int&gt; pagesRanges = new List&lt;int&gt;();
<br>
<br>
<br>
int delta = 5;             &#47;&#47; Số trang mở rộng về mỗi bên trang hiện tại
<br>
int remain = delta * 2;     &#47;&#47; Số trang hai bên trang hiện tại
<br>
<br>
pagesRanges.Add(currentPage);
<br>
&#47;&#47; Các trang phát triển về hai bên trang hiện tại
<br>
for (int i = 1; i &lt;= delta; i++)
<br>
{
<br>
if (currentPage + i &lt;= countPages)
<br>
{
<br>
pagesRanges.Add(currentPage + i);
<br>
remain--;
<br>
}
<br>
<br>
if (currentPage - i &gt;= 1)
<br>
{
<br>
pagesRanges.Insert(0, currentPage - i);
<br>
remain--;
<br>
}
<br>
<br>
}
<br>
&#47;&#47; Xử lý thêm vào các trang cho đủ remain
<br>
&#47;&#47;(xảy ra ở đầu mút của khoảng trang không đủ trang chèn  vào)
<br>
if (remain &gt; 0)
<br>
{
<br>
if (pagesRanges[0] == 1)
<br>
{
<br>
for (int i = 1; i &lt;= remain; i++)
<br>
{
<br>
if (pagesRanges.Last() + 1 &lt;= countPages)
<br>
{
<br>
pagesRanges.Add(pagesRanges.Last() + 1);
<br>
}
<br>
}
<br>
}
<br>
else
<br>
{
<br>
for (int i = 1; i &lt;= remain; i++)
<br>
{
<br>
if (pagesRanges.First() - 1 &gt; 1)
<br>
{
<br>
pagesRanges.Insert(0, pagesRanges.First() - 1);
<br>
}
<br>
}
<br>
}
<br>
}
<br>
<br>
}
<br>
<br>
&commat;* PHÁT SINH HTML*&commat;
<br>
<br>
&lt;ul class="pagination"&gt;
<br>
&lt;!-- Previous page link --&gt;
<br>
&commat;if (preview != null)
<br>
{
<br>
&lt;li class="page-item"&gt;
<br>
&lt;a class="page-link" href="&commat;generateUrl&commat;preview"&gt;Trang trước&lt;&#47;a&gt;
<br>
&lt;&#47;li&gt;
<br>
}
<br>
else
<br>
{
<br>
&lt;li class="page-item disabled"&gt;
<br>
&lt;a class="page-link" href="#" tabindex="-1" aria-disabled="true"&gt;Trang trước&lt;&#47;a&gt;
<br>
&lt;&#47;li&gt;
<br>
}
<br>
<br>
&lt;!-- Numbered page links --&gt;
<br>
&commat;foreach (var pageitem in pagesRanges)
<br>
{
<br>
if (pageitem != currentPage)
<br>
{
<br>
&lt;li class="page-item"&gt;
<br>
&lt;a class="page-link" href=&commat;generateUrl&commat;pageitem&gt;
<br>
&commat;pageitem
<br>
&lt;&#47;a&gt;
<br>
&lt;&#47;li&gt;
<br>
}
<br>
else
<br>
{
<br>
&lt;li class="page-item active" aria-current="page"&gt;
<br>
&lt;a class="page-link" href="#"&gt;&commat;pageitem &lt;span class="sr-only"&gt;(current)&lt;&#47;span&gt;&lt;&#47;a&gt;
<br>
&lt;&#47;li&gt;
<br>
}
<br>
}
<br>
<br>
<br>
&lt;!-- Next page link --&gt;
<br>
&commat;if (next != null)
<br>
{
<br>
&lt;li class="page-item"&gt;
<br>
&lt;a class="page-link" href=&commat;generateUrl&commat;next&gt;Trang sau&lt;&#47;a&gt;
<br>
&lt;&#47;li&gt;
<br>
}
<br>
else
<br>
{
<br>
&lt;li class="page-item disabled"&gt;
<br>
&lt;a class="page-link" href="#" tabindex="-1" aria-disabled="true"&gt;Trang sau&lt;&#47;a&gt;
<br>
&lt;&#47;li&gt;
<br>
}
<br>
&lt;&#47;ul&gt;
<br>
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
- Tại controller nào đó - VD : BookStoreController, sửa những Action có dạng View trả về danh sách, chỉnh lại code ví dụ như sau :
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
public ActionResult Sachtheochude(Guid id, int pageNumber)
<br>
{
<br>
List&lt;Sach&gt; products = data.Sachs.Where(p =&gt; p.MaChuDe == id).ToList();
<br>
<br>
&#47;&#47; Lấy tổng số dòng dữ liệu
<br>
var totalItems = products.Count();
<br>
<br>
int ITEMS_PER_PAGE = 10;
<br>
<br>
&#47;&#47; Tính số trang hiện thị (mỗi trang hiện thị ITEMS_PER_PAGE mục do bạn cấu hình = 10, 20 ...)
<br>
int totalPages = (int)Math.Ceiling((double)totalItems &#47; ITEMS_PER_PAGE);
<br>
&#47;&#47; Lấy phần tử trong  hang hiện tại (pageNumber là trang hiện tại - thường Binding từ route)
<br>
List&lt;Sach&gt; pros = products.Skip(ITEMS_PER_PAGE * (pageNumber - 1)).Take(ITEMS_PER_PAGE).ToList();
<br>
ViewBag.TrangHienTai = pageNumber;
<br>
ViewBag.TongSoTrang = totalPages;
<br>
ViewBag.SetLink = "&#47;BookStore&#47;Sachtheochude?id="+id+"&&pageNumber=";
<br>
return View(pros);
<br>
}
<br>
<br>
---------------------------------------------------------------------------------------------------------------------------------------------------
<br>
<br>
- Tại View nào đó ấy - VD như trên là Sachtheochude.cshtml, thêm patial vào ở đâu đó để thêm thanh ngang phân trang :
<br>
<br>
&lt;partial name="_Paging" &#47;&gt;
<br>
<&#47;h4>